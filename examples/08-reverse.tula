let Alpha { a b c }

trace Entry { % a b c a b c & _ }

case Entry % do % -> Init

for :a in Alpha
case Init :a do :a -> Init
case Init  & do  & <- Pick

case Pick & do & <- Pick
for :a in Alpha {
    case Pick      :a do & -> (Pick :a)
    case (Pick :a)  & do & -> (Pick :a)

    for :b in Alpha
    case (Pick :a) :b do :b -> (Pick :a)

    case (Pick :a)  _ do :a <- Reset
    case Reset     :a do :a <- Reset
}
case Reset & do & <- Pick
